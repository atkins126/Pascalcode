type matr=array[1..20,1..20] of real;
const m=3; n=3;
procedure Gauss(var a:matr;i1,i2:byte;x:real);
var i:byte;
begin
for i:=1 to n do
begin
a[i2,i]:=a[i2,i]*x;
a[i1,i]:=a[i1,i]-a[i2,i];
end;
end;
 
 
var
a:matr;
i,j,k:byte;
x:real;
i1,i2:byte;
begin

readln (i1);

readln (i2);

readln (x);
for i:=1 to m do
begin
for j:=1 to n do
begin
a[i,j]:=10*random+1;
write(a[i,j]:6:2);
end;
writeln;
end;
writeln;
repeat

readln(k);
until k in [1..n];
for i:=2 to m do
begin
x:=a[i,k]/a[1,k];
Gauss(a,i,1,x);
end;
for i:=1 to m do
begin
for j:=1 to n do
write(a[i,j]:6:2);
writeln;
end;
end.
